package chess.queries
import "http://example.com/chessdiagram"

pattern allMovesNoChess(piece : Piece, square : Square, chess : Chess) {
	find whiteMoves(piece, square, chess);

} or {
	find blackMoves(piece, square, chess);
}
pattern inChess(king : King, piece : Piece, chess : Chess){
	find square(king, kingSquare);
	find allMovesNoChess(piece, kingSquare, chess);	
}
pattern inChessWhite(king: King, piece : Piece, chess : Chess){
	King.colour(king, ::White);
	find square(king, kingSquare);
	find blackMoves(piece, kingSquare, chess);
}
pattern inChessBlack(king : King, piece : Piece, chess : Chess){
	King.colour(king, ::Black);
	find square(king, kingSquare);
	find whiteMoves(piece, kingSquare, chess);
}
pattern whiteCheckmate(king : King, piece : Piece, chess : Chess){
	find inChessWhite(king, piece, chess);
	neg find whiteMoves(_,_, chess);
}